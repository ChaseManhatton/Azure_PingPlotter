{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
    "locations": {
      "type": "array",
      "defaultValue": [
        "East US",
        "West US"
      ],
      "metadata": {
        "description": "Locations (Don't modify)"
      }
    },
    "locations_value": {
      "type": "array",
      "defaultValue": [
        "EAST",
        "WEST"
      ],
      "metadata": {
        "description": "Location values for identify resource location by name. (No need to modify)"
      }
    },
    "VMSize": {
      "type": "string",
      "defaultValue": "Standard_A0",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ]

    },
		"VMPrefix": {
			"type": "string",
			"defaultValue": null,
			"minLength": 2,
			"metadata": {
				"description": "VM Prefix for VMs (Example: WKTAAPING, would result in: WKTAAPING01 and 02)."
			}
		},
		"VMAdminUserName": {
			"type": "string",
			"minLength": 1
		},
		"VMAdminPassword": {
			"type": "securestring"
		},
		"VNETPrefix": {
			"type": "string",
			"minLength": 8,
			"defaultValue": "10.0.0.0/16",
			"metadata": {
				"description": "Virtual Network Address Space."
			}
		},
    "VNETSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "minLength": 8,
      "metadata": {
        "description": "VNET FE Subnet Range"
      }
    }
	},
	"variables": {
		"VMNodeStorageName": "[concat(parameters('VMPrefix'))]",
		"VMNodeNicName": "[concat(parameters('VMPrefix'), 'NIC')]",
		"VMCount": 2,
		"VNETSubnetName": "FE"
	},
	"resources": [
    {
      "name": "[concat(variables('VMNodeStorageName'), padLeft(copyIndex(1), 2, '0'))]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('locations')[copyIndex()]]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "Storage Accounts"
      },
      "properties": {
        "accountType": "Standard_LRS"
      },
      "copy": {
        "name": "storageAccountCopy",
        "count": "[variables('VMCount')]"
      }
    },
		{
			"name": "[concat(parameters('VMPrefix'), 'VNET_', parameters('locations_value')[copyIndex()])]",
			"type": "Microsoft.Network/virtualNetworks",
			"location": "[parameters('locations')[copyIndex()]]",
			"apiVersion": "2015-06-15",
			"dependsOn": [ ],
			"tags": {
				"displayName": "Virtual Networks"
			},
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('VNETPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('VNETSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('VNETSubnetPrefix')]"
            }
          }
        ]
      },
      "copy": {
        "name": "VNETCopy",
        "count": "[variables('VMCount')]"
      }
		},
    {
      "name": "[concat(variables('VMNodeNicName'), padLeft(copyIndex(1), 2, '0'))]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('locations')[copyIndex()]]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', concat(parameters('VMPrefix'), 'VNET_', parameters('locations_value')[copyIndex()]))]"
      ],
      "tags": {
        "displayName": "Virtual Machine NICs"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', concat(parameters('VMPrefix'), 'VNET_', parameters('locations_value')[copyIndex()])), '/subnets/', variables('VNETSubnetName'))]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "VMNicCopy",
        "count": "[variables('VMCount')]"
      }
    },
    {
      "name": "[concat(parameters('VMPrefix'), padLeft(copyIndex(1), 2, '0'))]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[parameters('locations')[copyIndex()]]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', concat(variables('VMNodeStorageName'), padLeft(copyIndex(1), 2, '0')))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('VMNodeNicName'), padLeft(copyIndex(1), 2, '0')))]"
      ],
      "tags": {
        "displayName": "Virtual Machines"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VMSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('VMPrefix'), padLeft(copyIndex(1), 2, '0'))]",
          "adminUsername": "[parameters('VMAdminUsername')]",
          "adminPassword": "[parameters('VMAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('VMPrefix'), padLeft(copyIndex(1), 2, '0'), '_OS')]",
            "vhd": {
              "uri": "[concat('http://', concat(variables('VMNodeStorageName'), padLeft(copyIndex(1), 2, '0')), '.blob.core.windows.net/vhds/', concat(parameters('VMPrefix'), padLeft(copyIndex(1), 2, '0'), '_OS'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('VMNodeNicName'), padLeft(copyIndex(1), 2, '0')))]"
            }
          ]
        }
      },
      "copy": {
        "name": "VMCopy",
        "count": "[variables('VMCount')]"
      }
    }
	],
	"outputs": {
	}
}
